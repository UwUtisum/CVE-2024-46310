import asyncio
import aiohttp
import requests

async def find_server_ip():
    server_code = input('Please enter the server code: ')
    if not server_code:
        print('No server code provided. Exiting.')
        return

    url = f'https://servers-frontend.fivem.net/api/servers/single/{server_code}'

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status != 200:
                    raise Exception(f'Network response was not ok. Status code: {response.status}')

                data = await response.json()
                #print('Response data:', data) uncomment to see full responce from fivem endpoint

                ip = data.get('Data', {}).get('connectEndPoints', [None])[0]
                if not ip:
                    print('Server IP not found.')
                    return

                print(f'Server IP: {ip}')
                print(f'Server User-data: http://{ip}/players.json')

                url = f"http://{ip}/players.json"
                rsp = requests.put(url, json={"test": "data"})

                # --------status codes-------- #
                if rsp.status_code == 200:
                    print("File can be written to")
                else:
                    print(f"Error: {rsp.status_code} - File cannot be written to")

    except Exception as error:
        print('Error fetching server IP.')
        print(f'Fetch error: {error}')

asyncio.run(find_server_ip())
